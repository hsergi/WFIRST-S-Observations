% Add path
addpath( genpath( '/Users/srhildeb/caltech/mat/' ) ) ;

% DEVELOPER EXAMPLE:
clear ; opt.developer = 1 ; opt.save_path = 'out_dev' ; opt.save_all = 1 ; opt.delta_lambda_nm = 1000 ; 
opt.r_source_mas = 120 ; opt.psi_source_deg = 0 ; makeStarshadeImage( opt ) ;


%%%%%%%%%%%%%%%%%%%%%
%   CALCULATIONS    %
%%%%%%%%%%%%%%%%%%%%%
% Minimum set of options
clear
opt.save_all = 1 ;
% Studying the effect of increasing the resolution of the pupil (perfect pupil)
opt.delta_lambda_nm = 100 ; opt.pupil_file = '0' ; 
makeStarshadeImage( opt ) ;
opt.Nx_pupil_pix = 128 ;
makeStarshadeImage( opt ) ;

% Studying the effect of increasing the resolution of the pupil (WFIRST pupil)
rmfield( opt, 'pupil_file' ) ;
opt.Nx_pupil_pix = 64 ;
makeStarshadeImage( opt ) ;
opt.Nx_pupil_pix = 128 ;
makeStarshadeImage( opt ) ;

% Studying the possibility of interpolation
%% 64 is fine from previous results
%% For the star:
opt.Nx_pupil_pix = 64 ;
opt.delta_lambda_nm = 25 ;
makeStarshadeImage( opt ) ;
%% For the planet at 20 mas
opt.r_source_mas = 20 ;
makeStarshadeImage( opt ) ;
%% For the planet at 60 mas
opt.r_source_mas = 60 ;
makeStarshadeImage( opt ) ;
%% For the planet at 120 mas
opt.r_source_mas = 120 ;
makeStarshadeImage( opt ) ;

%%%%%%%%%%%%%%
%   PLOTS    %
%%%%%%%%%%%%%%

% Studying the effect of increasing the resolution of the pupil (perfect pupil)
clear
opt.delta_lambda_nm = 100 ; opt.pupil_file = '0' ;
plotStarshadeImage( opt )
opt.Nx_pupil_pix = 128 ;
plotStarshadeImage( opt )

% Studying the effect of increasing the resolution of the pupil (WFIRST pupil)
rmfield( opt, 'pupil_file' ) ;
opt.Nx_pupil_pix = 64 ;
plotStarshadeImage( opt )
opt.Nx_pupil_pix = 128 ;
plotStarshadeImage( opt )

opt.Nx_pupil_pix = 64 ; opt.delta_lambda_nm = 25 ;
plotStarshadeImage( opt )
%% For the planet at 20 mas
opt.r_source_mas = 20 ;
plotStarshadeImage( opt )
%% For the planet at 60 mas
opt.r_source_mas = 60 ;
plotStarshadeImage( opt )
%% For the planet at 120 mas
opt.r_source_mas = 120 ;
plotStarshadeImage( opt )

%%%%%%%%%%%%%%%%%%%%%%%%%%
%   FIRST SIMULATIONS    %
%%%%%%%%%%%%%%%%%%%%%%%%%%

% Simulation of some star & planets configuration
clear
opt.r_star_mas = 0 ; % mas
opt.psi_star_deg = 0 ; % degrees
r_planet_mas = [ 69, 70, 71, 119, 120, 121, 199, 200, 201, 349, 350, 351 ] ; % mas
phase_planet_deg = [ 230, 230, 230, 90, 90, 90, 280, 280, 280, 25, 25, 25 ] ; % degrees
% Simulating an orbital plane with some inclination
x = r_planet_mas .* sin( pi /180 * phase_planet_deg ) ;
incl_deg = 75 ; % deg
y =  r_planet_mas .* cos( pi /180 * phase_planet_deg ) * cos( pi / 180 * incl_deg ) ;
plot( x, y, '+' ) ; 
opt.r_planet_mas = sqrt( x.^2 + y.^2 ) ;
opt.phase_planet_deg = 180 / pi * atan2( y, x ) ;
% Rayleigh-Jeans factors for the phase function, 
% from figure 7 of Madhusudhan&Burrows (2012) ApJ 747
fct_phs_fnctn = [ 0.5, 0.5, 0.5, 0.85, 0.85, 0.85, 0.3, 0.3, 0.3, 0.1, 0.1, 0.1 ] ;
opt.contrast_planet = 1e-9 * ( 70 ./ opt.r_planet_mas ).^2 .* fct_phs_fnctn ; % relative to the star
opt.save_all = 1 ;
% With NI2
opt.delta_lambda_nm = 90 ;
opt.redo = 0
starshade_simulation( opt ) ;

% Movie (without Rayleigh scattering)
% Simulation of some star & planets configuration
clear
opt.r_star_mas = 0 ; % mas
opt.psi_star_deg = 0 ; % degrees
n_steps = 100 ;
r_planet_mas = 250 * ones(1, n_steps ) ; % mas
phase_planet_deg = 0 : 360 / ( n_steps - 1 ) : 360 ; % degrees
% Simulating an orbital plane with some inclination
incl_deg = 90 ; % deg
x = r_planet_mas .* sin( pi /180 * phase_planet_deg ) * cos( pi / 180 * incl_deg ) ;
y =  r_planet_mas .* cos( pi /180 * phase_planet_deg ) ;
plot( x, y, '+' ) ; xlim( [-100, 100 ] ) ; ylim( [-100,100 ] ) ;
grid ;
opt.r_planet_mas = sqrt( x.^2 + y.^2 ) ;
opt.phase_planet_deg = 180 / pi * atan2( y, x ) ;
opt.contrast_planet = 1e-9 * ones( 1, numel( x ) ) ; % relative to the star
opt.save_all = 1 ;
% With NI2
% Only one wavelength
opt.delta_lambda_nm = 200 ;
opt.redo =0
starshade_simulation( opt ) ;

% Movie (without Rayleigh scattering)
% Simulation of some star & planets configuration
clear
opt.r_star_mas = 0 ; % mas
opt.psi_star_deg = 0 ; % degrees
n_steps = 20 ;
r_planet_mas = 250 * ones(1, n_steps ) ; % mas
phase_planet_deg = 0 : 360 / ( n_steps - 1 ) : 360 ; % degrees
% Simulating an orbital plane with some inclination
incl_deg = 90 ; % deg
x = r_planet_mas .* sin( pi /180 * phase_planet_deg ) * cos( pi / 180 * incl_deg ) ;
y =  r_planet_mas .* cos( pi /180 * phase_planet_deg ) ;
%plot( x, y, '+' ) ; xlim( [-100, 100 ] ) ; ylim( [-100,100 ] ) ;
%grid ;
opt.r_planet_mas = sqrt( x.^2 + y.^2 ) ;
opt.phase_planet_deg = 180 / pi * atan2( y, x ) ;
opt.contrast_planet = 1e-9 * ones( 1, numel( x ) ) ; % relative to the star
opt.save_all = 1 ;
% With NI2
% Only one wavelength
opt.delta_lambda_nm = 200 ;
opt.redo = 0 ;
starshade_simulation( opt ) ;



%%%%%%%%%%%%%%%%%%%%
%   INTERPOLATION  %
%%%%%%%%%%%%%%%%%%%%

% A) Off-axis objects:

clear
opt.developer = 1 ;
opt.redo = 0 ;
opt.create_reference = 1 ;
opt.planet = 1 ;
opt.delta_lambda_nm = 30 ;
opt.save = 1 ;
% For the analysis
opt.step_mas = 8 ; % ( 5, 8 )
opt.n_basis_interpolation = 17 ; (11)
opt.super_resolution.res = 1 ;
opt.super_resolution.interp_method = 'linear' ;
opt.low_resolution.res = 2 ;
opt.low_resolution.interp_method = 'spline' ;
opt.x_planet_mas = 0 ; % ( 0, 30, 120 )
opt.y_planet_mas = 0 ; % ( 0, 30, 120 )
starshade_interpolation( opt ) ;

% A1) Simulation at a single location to check the interpolation in wavelength
clear
opt.developer = 1 ;
opt.delta_lambda_nm = 10 ;
opt.save = 1 ;
opt.x_source_mas = 31 ; % ( 31, 123 )
opt.y_source_mas = 31 ; % ( 31, 123 )
makeStarshadeImage( opt ) ;


% B) On-axis onjects: (Star)
clear
opt.developer = 1 ;
opt.redo = 0 ;
opt.create_reference = 1 ;
opt.star = 1 ;
opt.delta_lambda_nm = 30 ;
opt.save = 1 ;
% For the analysis
opt.super_resolution.res = 1 ;
opt.super_resolution.interp_method = 'linear' ;
opt.low_resolution.res = 2 ;
opt.low_resolution.interp_method = 'linear' ;
starshade_interpolation( opt ) ;


% C) Radial interpolation
clear
opt.developer = 1 ;
opt.redo = 0 ;
opt.create_reference = 1 ;
opt.polar = 1 ;
opt.polar_radius_1 = 0 ; % mas
opt.polar_radius_2 = 120 ; % mas
opt.polar_alpha_1 = 0 ; % deg
opt.polar_alpha_2 = 90. / 14 ; % deg (NI2)
opt.delta_lambda_nm = 200 ; % Only one
opt.save = 1 ;
% For the analysis
opt.step_mas = 1 ; % ( 1 )
opt.n_basis_interpolation = 17 ; % (11)
opt.super_resolution.res = 1 ;
opt.super_resolution.interp_method = 'linear' ;
opt.low_resolution.res = 2 ;
opt.low_resolution.interp_method = 'spline' ;
opt.x_planet_mas = 0 ; % ( 0, 30, 120 )
opt.y_planet_mas = 0 ; % ( 0, 30, 120 )
starshade_interpolation( opt ) ;

% D) Translation
clear
opt.Nx_image_pix = 1200 ;
starshade_translation( opt ) ;



% Some figures
figure( 1 )
imagesc( log10( abs( efDefectImg(:,:,1) ).^2 ) ) ; colorbar ; title( 'Exact simulation. NI2. 425 nm', 'FontSize', 14 )
figure( 2 )
imagesc( log10( abs(IntDefectImg(:,:,1) ) ) ) ; colorbar ; title( { 'Exact simulation interpolated at higher resolution. NI2. 425 nm', [ 'Interpolation method: \bf{' opt.interp_method '}. Super resolution factor=' num2str( opt.super_resolution ) ] }, 'FontSize', 14 )






